async index(request, response) {
        const {title,  tags} = request.query;
        const user_id = request.user.id;
        console.log(user_id)
        console.log("bom dia")
        let movies;
        if(tags){
            const filterTags = tags.split(',').map(tag =>tag.trim());

            movies = await knex("tags")
            .select([
                "movies.id",
            "movies.title",
            "movies.user_id",
            ])
            .where("movies.user_id", user_id)
            .whereLike("movies.title", `%${title}%`)
            .whereIn("name", filterTags)
            .innerJoin("movies", "movies.id", "tags.note_id")
            .orderBy("movies.title")

        }else {
            movies = await knex("movies")
            .where({user_id})
            whereLike("title", `%${title}%`)
            .orderBy("title");
        }
        const userTags = await knex("tags").where({user_id});
        const notesWithTags = movies.map(note => {
            const noteTags = userTags.filter(tag => tag.note_id === note.id);

            return {
                ...note,
                tags: noteTags
            }
        });
        console.log(  notesWithTags )

        return response.json(notesWithTags);
        console.log(  notesWithTags )
    }
}
























async index(request, response) {
    const {title,  tags} = request.query;
    const user_id = request.user.id;
    console.log(user_id)
    console.log("bom dia")
    let movies;
    
        const filterTags = tags.split(',').map(tag =>tag.trim());

        movies = await knex("tags")
        .select([
            "movies.id",
        "movies.title",
        "movies.user_id",
        ])
        .where("movies.user_id", user_id)
        .whereLike("movies.title", `%${title}%`)
        .whereIn("name", filterTags)
        .innerJoin("movies", "movies.id", "tags.note_id")
        .orderBy("movies.title")

    
        movies = await knex("movies")
        .where({user_id})
        .whereLike("title", `%${title}%`)
        .orderBy("title");
    
    const userTags = await knex("tags").where({user_id});
    const notesWithTags = movies.map(note => {
        const noteTags = userTags.filter(tag => tag.note_id === note.id);

        return {
            ...note,
            tags: noteTags
        }
    });
    console.log(  notesWithTags )

    return response.json(notesWithTags);
    console.log(  notesWithTags )
}
}